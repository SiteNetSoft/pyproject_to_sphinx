[tool.poetry]
name = "pyproject_to_sphinx"
title = "Pyproject to Sphinx"
version = "0.1.1"
description = "It takes the information from pyproject.toml to populate the Sphinx conf.py file."
authors = ["Jean-Nicolas Boulay Desjardins"]
license = "MIT"
readme = "README.md"
keywords = ["pyproject", "sphinx", "documentation"]
classifiers=[
    'Environment :: Console',
    'Intended Audience :: Developers',
    'Intended Audience :: Information Technology',
    'Intended Audience :: System Administrators',
    'License :: OSI Approved :: MIT License',
    'Operating System :: POSIX :: Linux',
    'Operating System :: MacOS :: MacOS X',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Topic :: Software Development :: Build Tools',
    'Topic :: Utilities',
]
packages = [{include='pyproject_to_sphinx', from='.'}]

[tool.poetry.scripts]
amadlacli = 'amadlacli.cli:main'

[tool.poetry.dependencies]
python = "^3.9.0"
toml = "^0.10.2"

[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
ruff = "^0.0"
pre-commit = "^3.0.4"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
  \.toml
  |\.sh
  |\.git
  |\.ini
  |Dockerfile
  |Jenkinfile
)/
'''

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[project.urls]
source="https://github.com/SiteNetSoft/pyproject_to_sphinx"
GitHub= "https://github.com/SiteNetSoft/"
documentation = "https://sitenetsoft.org/docs/pyproject_to_sphinx/en/html/latest"
saythanks = "https://saythanks.io/to/sitenetsoft.org"
changelog = "https://github.com/SiteNetSoft/pyproject_to_sphinx/blob/develop/CHANGELOG.rst"

[tool.ruff]
# Enable Pyflakes `E` and `F` codes by default.
select = [
    "E",
    "F",
    "I", #isort
    "S",   # flake8-bandit
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ICN", # flake8-import-conventions
    "PT",  # flake8-pytest-style
    "Q",   # flake8-quotes
    "SIM", # flake8-simplify
    "PLC", # Pylint - Convention
    "PLE", # Pylint - Error
    "PLR", # Pylint - Refactor
    "TRY", # tryceratops
    "RUF", # Ruff-specific rules
]
ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
per-file-ignores = {}

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

target-version = "py39"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10